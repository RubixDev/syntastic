//! The 'solarized' theme collection in this module was extracted from <https://github.com/overcache/NeoSolarized> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn dark() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(131, 148, 150), Some(Color::new(0, 43, 54)), false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(88, 110, 117), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(88, 110, 117), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("text.title".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, true)),
        ("text.todo".into(), Style::new(Color::new(211, 54, 130), None, false, false, false, true)),
        ("text.underline".into(), Style::new(Color::new(108, 113, 196), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(108, 113, 196), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(101, 123, 131), Some(Color::new(253, 246, 227)), false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(147, 161, 161), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(113, 158, 7), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(42, 161, 152), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(220, 50, 47), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(147, 161, 161), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
        ("text.title".into(), Style::new(Color::new(203, 75, 22), None, false, false, false, true)),
        ("text.todo".into(), Style::new(Color::new(211, 54, 130), None, false, false, false, true)),
        ("text.underline".into(), Style::new(Color::new(108, 113, 196), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(108, 113, 196), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(181, 137, 0), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(38, 139, 210), None, false, false, false, false)),
    ]))
}
