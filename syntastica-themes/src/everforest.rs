//! The 'everforest' theme collection in this module was extracted from <https://github.com/sainnhe/everforest> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn dark() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(236, 225, 215), Some(Color::new(41, 37, 34)), false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(207, 155, 194), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(127, 145, 178), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(235, 192, 109), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(193, 167, 142), None, false, false, true, false)),
        ("comment.documentation".into(), Style::new(Color::new(193, 167, 142), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(228, 155, 93), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(236, 225, 215), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(179, 128, 176), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(179, 128, 176), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(235, 192, 109), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(235, 192, 109), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(133, 182, 149), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(228, 155, 93), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(236, 225, 215), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(207, 155, 194), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(235, 192, 109), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(235, 192, 109), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(235, 192, 109), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(133, 182, 149), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(228, 155, 93), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(133, 182, 149), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(137, 179, 182), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(133, 182, 149), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(235, 192, 109), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(236, 225, 215), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(207, 155, 194), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(212, 119, 102), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(236, 225, 215), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(133, 182, 149), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(236, 225, 215), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(139, 116, 73), None, false, false, false, false)),
        ("punctuation.delimiter".into(), Style::new(Color::new(189, 129, 131), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(228, 155, 93), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(228, 155, 93), None, false, false, false, false)),
        ("storageclass.lifetime".into(), Style::new(Color::new(137, 179, 182), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(163, 169, 206), None, false, false, true, false)),
        ("string.documentation".into(), Style::new(Color::new(163, 169, 206), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(127, 145, 178), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(163, 169, 206), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(137, 179, 182), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(236, 225, 215), None, false, false, true, false)),
        ("tag".into(), Style::new(Color::new(235, 192, 109), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(137, 179, 182), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(139, 116, 73), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(193, 167, 142), None, false, false, false, false)),
        ("text.quote".into(), Style::new(Color::new(193, 167, 142), None, false, false, true, false)),
        ("text.title".into(), Style::new(Color::new(228, 155, 93), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(193, 167, 142), None, false, false, false, true)),
        ("text.uri".into(), Style::new(Color::new(163, 169, 206), None, true, false, false, false)),
        ("type".into(), Style::new(Color::new(123, 150, 149), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(123, 150, 149), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(228, 155, 93), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(236, 225, 215), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(236, 225, 215), None, false, false, true, false)),
    ]))
}

#[rustfmt::skip]
pub fn light() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(84, 67, 58), Some(Color::new(241, 241, 241)), false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(144, 65, 128), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(120, 146, 189), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(160, 109, 0), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(125, 102, 88), None, false, false, true, false)),
        ("comment.documentation".into(), Style::new(Color::new(125, 102, 88), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(188, 92, 0), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(84, 67, 58), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(190, 121, 187), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(190, 121, 187), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(160, 109, 0), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(160, 109, 0), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(58, 104, 74), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(188, 92, 0), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(84, 67, 58), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(144, 65, 128), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(160, 109, 0), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(160, 109, 0), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(160, 109, 0), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(58, 104, 74), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(188, 92, 0), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(58, 104, 74), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(61, 101, 104), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(58, 104, 74), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(160, 109, 0), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(84, 67, 58), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(144, 65, 128), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(191, 0, 33), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(84, 67, 58), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(58, 104, 74), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(84, 67, 58), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(204, 164, 120), None, false, false, false, false)),
        ("punctuation.delimiter".into(), Style::new(Color::new(199, 123, 139), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(188, 92, 0), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(188, 92, 0), None, false, false, false, false)),
        ("storageclass.lifetime".into(), Style::new(Color::new(61, 101, 104), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(70, 90, 164), None, false, false, true, false)),
        ("string.documentation".into(), Style::new(Color::new(70, 90, 164), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(120, 146, 189), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(70, 90, 164), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(61, 101, 104), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(84, 67, 58), None, false, false, true, false)),
        ("tag".into(), Style::new(Color::new(160, 109, 0), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(61, 101, 104), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(204, 164, 120), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(125, 102, 88), None, false, false, false, false)),
        ("text.quote".into(), Style::new(Color::new(125, 102, 88), None, false, false, true, false)),
        ("text.title".into(), Style::new(Color::new(188, 92, 0), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(125, 102, 88), None, false, false, false, true)),
        ("text.uri".into(), Style::new(Color::new(70, 90, 164), None, true, false, false, false)),
        ("type".into(), Style::new(Color::new(115, 151, 151), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(115, 151, 151), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(188, 92, 0), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(84, 67, 58), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(84, 67, 58), None, false, false, true, false)),
    ]))
}
