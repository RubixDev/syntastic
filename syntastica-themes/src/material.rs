//! The 'material' theme collection in this module was extracted from <https://github.com/marko-cerovac/material.nvim> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn darker() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(176, 190, 197), Some(Color::new(33, 33, 33)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(81, 81, 81), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 128, 255), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(140, 139, 139), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(176, 190, 197), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(140, 139, 139), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("punctuation.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(140, 139, 139), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(140, 139, 139), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.environment".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(176, 190, 197), None, false, false, false, false)),
        ("text.title".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, true)),
        ("text.todo".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, true)),
        ("text.uri".into(), Style::new(Color::new(128, 203, 196), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(176, 190, 197), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(176, 190, 197), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn lighter() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(84, 110, 122), Some(Color::new(250, 250, 250)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(97, 130, 184), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(247, 109, 71), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(247, 109, 71), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(229, 57, 53), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(170, 191, 201), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(124, 77, 255), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(246, 164, 52), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(246, 164, 52), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(97, 130, 184), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(229, 57, 53), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 128, 255), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(229, 57, 53), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(148, 167, 176), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(247, 109, 71), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(97, 130, 184), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(97, 130, 184), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(246, 164, 52), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(97, 130, 184), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(246, 164, 52), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(247, 109, 71), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(84, 110, 122), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(148, 167, 176), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("punctuation.delimiter".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(124, 77, 255), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(145, 184, 89), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(148, 167, 176), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(246, 164, 52), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(148, 167, 176), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(246, 164, 52), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(229, 57, 53), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(124, 77, 255), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(145, 184, 89), None, false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(229, 57, 53), None, false, false, false, false)),
        ("text.environment".into(), Style::new(Color::new(229, 57, 53), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(229, 57, 53), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(145, 184, 89), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(246, 164, 52), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(84, 110, 122), None, false, false, false, false)),
        ("text.title".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, true)),
        ("text.todo".into(), Style::new(Color::new(246, 164, 52), None, false, false, false, true)),
        ("text.uri".into(), Style::new(Color::new(128, 203, 196), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(124, 77, 255), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(124, 77, 255), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(124, 77, 255), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(57, 173, 181), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(84, 110, 122), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(84, 110, 122), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn oceanic() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(176, 190, 197), Some(Color::new(37, 54, 59)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(84, 110, 122), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 128, 255), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(124, 158, 173), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(176, 190, 197), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(124, 158, 173), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("punctuation.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(124, 158, 173), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(124, 158, 173), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.environment".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(176, 190, 197), None, false, false, false, false)),
        ("text.title".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, true)),
        ("text.todo".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, true)),
        ("text.uri".into(), Style::new(Color::new(128, 203, 196), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(176, 190, 197), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(176, 190, 197), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn palenight() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(166, 172, 205), Some(Color::new(41, 45, 62)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(103, 110, 149), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 128, 255), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(113, 124, 180), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(166, 172, 205), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(113, 124, 180), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("punctuation.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(113, 124, 180), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(113, 124, 180), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.environment".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(166, 172, 205), None, false, false, false, false)),
        ("text.title".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, true)),
        ("text.todo".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, true)),
        ("text.uri".into(), Style::new(Color::new(128, 203, 196), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(166, 172, 205), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(166, 172, 205), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn deep_ocean() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(166, 172, 205), Some(Color::new(15, 17, 26)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(70, 75, 93), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 128, 255), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(113, 124, 180), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(166, 172, 205), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(113, 124, 180), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("punctuation.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(113, 124, 180), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(113, 124, 180), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.environment".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(240, 113, 120), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(195, 232, 141), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(166, 172, 205), None, false, false, false, false)),
        ("text.title".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, true)),
        ("text.todo".into(), Style::new(Color::new(255, 203, 107), None, false, false, false, true)),
        ("text.uri".into(), Style::new(Color::new(128, 203, 196), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(166, 172, 205), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(166, 172, 205), None, false, false, false, false)),
    ]))
}
