//! The catppuccin theme collection in this module was extracted from <https://github.com/catppuccin/nvim> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn latte() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_fg".to_owned(), Style::color_only(76, 79, 105)),
        ("_bg".to_owned(), Style::color_only(239, 241, 245)),
        ("attribute".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(23, 146, 153), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(234, 118, 203), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(156, 160, 176), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(136, 57, 239), false, false, true, false)),
        ("constant".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("constant.java".to_owned(), Style::new(Color::new(23, 146, 153), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(32, 159, 181), false, false, false, false)),
        ("constructor.lua".to_owned(), Style::new(Color::new(221, 120, 120), false, false, false, false)),
        ("constructor.tsx".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, false)),
        ("constructor.typescript".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(234, 118, 203), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(234, 118, 203), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(210, 15, 57), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, false)),
        ("field.yaml".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("function.builtin.bash".to_owned(), Style::new(Color::new(210, 15, 57), false, false, true, false)),
        ("function.call".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(23, 146, 153), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("keyword.export".to_owned(), Style::new(Color::new(4, 165, 229), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("keyword.return".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(32, 159, 181), false, false, false, false)),
        ("label.json".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("method.call".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("method.call.php".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("method.php".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(114, 135, 253), false, false, true, false)),
        ("number".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("number.css".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(4, 165, 229), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(230, 69, 83), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(234, 118, 203), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, false)),
        ("property.class.css".to_owned(), Style::new(Color::new(223, 142, 29), false, false, false, false)),
        ("property.cpp".to_owned(), Style::new(Color::new(76, 79, 105), false, false, false, false)),
        ("property.css".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, false)),
        ("property.id.css".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("property.toml".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("property.typescript".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(124, 127, 147), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(124, 127, 147), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(124, 127, 147), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(234, 118, 203), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(223, 142, 29), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(64, 160, 43), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(234, 118, 203), false, false, false, false)),
        ("string.plain.css".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(234, 118, 203), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(221, 120, 120), false, false, false, false)),
        ("symbol.ruby".to_owned(), Style::new(Color::new(221, 120, 120), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(23, 146, 153), false, false, true, false)),
        ("tag.attribute.tsx".to_owned(), Style::new(Color::new(136, 57, 239), false, false, true, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(4, 165, 229), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(76, 79, 105), false, false, false, false)),
        ("text.danger".to_owned(), Style::new(Color::new(239, 241, 245), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(64, 160, 43), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(210, 15, 57), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(230, 69, 83), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(234, 118, 203), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(23, 146, 153), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, false)),
        ("text.note".to_owned(), Style::new(Color::new(239, 241, 245), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, true)),
        ("text.strike".to_owned(), Style::new(Color::new(76, 79, 105), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(230, 69, 83), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(30, 102, 245), false, false, false, true)),
        ("text.title.1.markdown".to_owned(), Style::new(Color::new(210, 15, 57), false, false, false, false)),
        ("text.title.2.markdown".to_owned(), Style::new(Color::new(254, 100, 11), false, false, false, false)),
        ("text.title.3.markdown".to_owned(), Style::new(Color::new(223, 142, 29), false, false, false, false)),
        ("text.title.4.markdown".to_owned(), Style::new(Color::new(64, 160, 43), false, false, false, false)),
        ("text.title.5.markdown".to_owned(), Style::new(Color::new(32, 159, 181), false, false, false, false)),
        ("text.title.6.markdown".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, false)),
        ("text.todo".to_owned(), Style::new(Color::new(239, 241, 245), false, false, false, false)),
        ("text.todo.checked".to_owned(), Style::new(Color::new(64, 160, 43), false, false, false, false)),
        ("text.todo.unchecked".to_owned(), Style::new(Color::new(140, 143, 161), false, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(220, 138, 120), true, false, true, false)),
        ("text.warning".to_owned(), Style::new(Color::new(239, 241, 245), false, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(223, 142, 29), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(223, 142, 29), false, false, false, false)),
        ("type.builtin.c".to_owned(), Style::new(Color::new(223, 142, 29), false, false, false, false)),
        ("type.builtin.cpp".to_owned(), Style::new(Color::new(223, 142, 29), false, false, false, false)),
        ("type.css".to_owned(), Style::new(Color::new(114, 135, 253), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(223, 142, 29), false, false, false, false)),
        ("type.qualifier".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("type.tag.css".to_owned(), Style::new(Color::new(136, 57, 239), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(76, 79, 105), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(210, 15, 57), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn mocha() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_fg".to_owned(), Style::color_only(205, 214, 244)),
        ("_bg".to_owned(), Style::color_only(30, 30, 46)),
        ("attribute".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(148, 226, 213), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(245, 194, 231), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(108, 112, 134), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(203, 166, 247), false, false, true, false)),
        ("constant".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("constant.java".to_owned(), Style::new(Color::new(148, 226, 213), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(116, 199, 236), false, false, false, false)),
        ("constructor.lua".to_owned(), Style::new(Color::new(242, 205, 205), false, false, false, false)),
        ("constructor.tsx".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, false)),
        ("constructor.typescript".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(245, 194, 231), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(245, 194, 231), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(243, 139, 168), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, false)),
        ("field.yaml".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("function.builtin.bash".to_owned(), Style::new(Color::new(243, 139, 168), false, false, true, false)),
        ("function.call".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(148, 226, 213), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("keyword.export".to_owned(), Style::new(Color::new(137, 220, 235), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("keyword.return".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(116, 199, 236), false, false, false, false)),
        ("label.json".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("method.call".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("method.call.php".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("method.php".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(180, 190, 254), false, false, true, false)),
        ("number".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("number.css".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(137, 220, 235), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(235, 160, 172), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(245, 194, 231), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, false)),
        ("property.class.css".to_owned(), Style::new(Color::new(249, 226, 175), false, false, false, false)),
        ("property.cpp".to_owned(), Style::new(Color::new(205, 214, 244), false, false, false, false)),
        ("property.css".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, false)),
        ("property.id.css".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("property.toml".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("property.typescript".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(147, 153, 178), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(147, 153, 178), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(147, 153, 178), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(245, 194, 231), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(249, 226, 175), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(166, 227, 161), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(245, 194, 231), false, false, false, false)),
        ("string.plain.css".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(245, 194, 231), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(242, 205, 205), false, false, false, false)),
        ("symbol.ruby".to_owned(), Style::new(Color::new(242, 205, 205), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(148, 226, 213), false, false, true, false)),
        ("tag.attribute.tsx".to_owned(), Style::new(Color::new(203, 166, 247), false, false, true, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(137, 220, 235), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(205, 214, 244), false, false, false, false)),
        ("text.danger".to_owned(), Style::new(Color::new(30, 30, 46), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(166, 227, 161), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(243, 139, 168), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(235, 160, 172), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(245, 194, 231), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(148, 226, 213), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, false)),
        ("text.note".to_owned(), Style::new(Color::new(30, 30, 46), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, true)),
        ("text.strike".to_owned(), Style::new(Color::new(205, 214, 244), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(235, 160, 172), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(137, 180, 250), false, false, false, true)),
        ("text.title.1.markdown".to_owned(), Style::new(Color::new(243, 139, 168), false, false, false, false)),
        ("text.title.2.markdown".to_owned(), Style::new(Color::new(250, 179, 135), false, false, false, false)),
        ("text.title.3.markdown".to_owned(), Style::new(Color::new(249, 226, 175), false, false, false, false)),
        ("text.title.4.markdown".to_owned(), Style::new(Color::new(166, 227, 161), false, false, false, false)),
        ("text.title.5.markdown".to_owned(), Style::new(Color::new(116, 199, 236), false, false, false, false)),
        ("text.title.6.markdown".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, false)),
        ("text.todo".to_owned(), Style::new(Color::new(30, 30, 46), false, false, false, false)),
        ("text.todo.checked".to_owned(), Style::new(Color::new(166, 227, 161), false, false, false, false)),
        ("text.todo.unchecked".to_owned(), Style::new(Color::new(127, 132, 156), false, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(245, 224, 220), true, false, true, false)),
        ("text.warning".to_owned(), Style::new(Color::new(30, 30, 46), false, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(249, 226, 175), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(249, 226, 175), false, false, false, false)),
        ("type.builtin.c".to_owned(), Style::new(Color::new(249, 226, 175), false, false, false, false)),
        ("type.builtin.cpp".to_owned(), Style::new(Color::new(249, 226, 175), false, false, false, false)),
        ("type.css".to_owned(), Style::new(Color::new(180, 190, 254), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(249, 226, 175), false, false, false, false)),
        ("type.qualifier".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("type.tag.css".to_owned(), Style::new(Color::new(203, 166, 247), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(205, 214, 244), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(243, 139, 168), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn frappe() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_fg".to_owned(), Style::color_only(198, 208, 245)),
        ("_bg".to_owned(), Style::color_only(48, 52, 70)),
        ("attribute".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(129, 200, 190), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(244, 184, 228), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(115, 121, 148), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(202, 158, 230), false, false, true, false)),
        ("constant".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("constant.java".to_owned(), Style::new(Color::new(129, 200, 190), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(133, 193, 220), false, false, false, false)),
        ("constructor.lua".to_owned(), Style::new(Color::new(238, 190, 190), false, false, false, false)),
        ("constructor.tsx".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, false)),
        ("constructor.typescript".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(244, 184, 228), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(244, 184, 228), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(231, 130, 132), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, false)),
        ("field.yaml".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("function.builtin.bash".to_owned(), Style::new(Color::new(231, 130, 132), false, false, true, false)),
        ("function.call".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(129, 200, 190), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("keyword.export".to_owned(), Style::new(Color::new(153, 209, 219), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("keyword.return".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(133, 193, 220), false, false, false, false)),
        ("label.json".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("method.call".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("method.call.php".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("method.php".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(186, 187, 241), false, false, true, false)),
        ("number".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("number.css".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(153, 209, 219), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(234, 153, 156), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(244, 184, 228), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, false)),
        ("property.class.css".to_owned(), Style::new(Color::new(229, 200, 144), false, false, false, false)),
        ("property.cpp".to_owned(), Style::new(Color::new(198, 208, 245), false, false, false, false)),
        ("property.css".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, false)),
        ("property.id.css".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("property.toml".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("property.typescript".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(148, 156, 187), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(148, 156, 187), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(148, 156, 187), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(244, 184, 228), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(229, 200, 144), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(166, 209, 137), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(244, 184, 228), false, false, false, false)),
        ("string.plain.css".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(244, 184, 228), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(238, 190, 190), false, false, false, false)),
        ("symbol.ruby".to_owned(), Style::new(Color::new(238, 190, 190), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(129, 200, 190), false, false, true, false)),
        ("tag.attribute.tsx".to_owned(), Style::new(Color::new(202, 158, 230), false, false, true, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(153, 209, 219), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(198, 208, 245), false, false, false, false)),
        ("text.danger".to_owned(), Style::new(Color::new(48, 52, 70), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(166, 209, 137), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(231, 130, 132), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(234, 153, 156), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(244, 184, 228), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(129, 200, 190), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, false)),
        ("text.note".to_owned(), Style::new(Color::new(48, 52, 70), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, true)),
        ("text.strike".to_owned(), Style::new(Color::new(198, 208, 245), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(234, 153, 156), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(140, 170, 238), false, false, false, true)),
        ("text.title.1.markdown".to_owned(), Style::new(Color::new(231, 130, 132), false, false, false, false)),
        ("text.title.2.markdown".to_owned(), Style::new(Color::new(239, 159, 118), false, false, false, false)),
        ("text.title.3.markdown".to_owned(), Style::new(Color::new(229, 200, 144), false, false, false, false)),
        ("text.title.4.markdown".to_owned(), Style::new(Color::new(166, 209, 137), false, false, false, false)),
        ("text.title.5.markdown".to_owned(), Style::new(Color::new(133, 193, 220), false, false, false, false)),
        ("text.title.6.markdown".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, false)),
        ("text.todo".to_owned(), Style::new(Color::new(48, 52, 70), false, false, false, false)),
        ("text.todo.checked".to_owned(), Style::new(Color::new(166, 209, 137), false, false, false, false)),
        ("text.todo.unchecked".to_owned(), Style::new(Color::new(131, 139, 167), false, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(242, 213, 207), true, false, true, false)),
        ("text.warning".to_owned(), Style::new(Color::new(48, 52, 70), false, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(229, 200, 144), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(229, 200, 144), false, false, false, false)),
        ("type.builtin.c".to_owned(), Style::new(Color::new(229, 200, 144), false, false, false, false)),
        ("type.builtin.cpp".to_owned(), Style::new(Color::new(229, 200, 144), false, false, false, false)),
        ("type.css".to_owned(), Style::new(Color::new(186, 187, 241), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(229, 200, 144), false, false, false, false)),
        ("type.qualifier".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("type.tag.css".to_owned(), Style::new(Color::new(202, 158, 230), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(198, 208, 245), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(231, 130, 132), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn macchiato() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_fg".to_owned(), Style::color_only(202, 211, 245)),
        ("_bg".to_owned(), Style::color_only(36, 39, 58)),
        ("attribute".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(139, 213, 202), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(245, 189, 230), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(110, 115, 141), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(198, 160, 246), false, false, true, false)),
        ("constant".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("constant.java".to_owned(), Style::new(Color::new(139, 213, 202), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(125, 196, 228), false, false, false, false)),
        ("constructor.lua".to_owned(), Style::new(Color::new(240, 198, 198), false, false, false, false)),
        ("constructor.tsx".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, false)),
        ("constructor.typescript".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(245, 189, 230), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(245, 189, 230), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(237, 135, 150), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, false)),
        ("field.yaml".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("function.builtin.bash".to_owned(), Style::new(Color::new(237, 135, 150), false, false, true, false)),
        ("function.call".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(139, 213, 202), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("keyword.export".to_owned(), Style::new(Color::new(145, 215, 227), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("keyword.return".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(125, 196, 228), false, false, false, false)),
        ("label.json".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("method.call".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("method.call.php".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("method.php".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(183, 189, 248), false, false, true, false)),
        ("number".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("number.css".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(145, 215, 227), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(238, 153, 160), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(245, 189, 230), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, false)),
        ("property.class.css".to_owned(), Style::new(Color::new(238, 212, 159), false, false, false, false)),
        ("property.cpp".to_owned(), Style::new(Color::new(202, 211, 245), false, false, false, false)),
        ("property.css".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, false)),
        ("property.id.css".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("property.toml".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("property.typescript".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(147, 154, 183), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(147, 154, 183), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(147, 154, 183), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(245, 189, 230), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(238, 212, 159), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(166, 218, 149), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(245, 189, 230), false, false, false, false)),
        ("string.plain.css".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(245, 189, 230), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(240, 198, 198), false, false, false, false)),
        ("symbol.ruby".to_owned(), Style::new(Color::new(240, 198, 198), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(139, 213, 202), false, false, true, false)),
        ("tag.attribute.tsx".to_owned(), Style::new(Color::new(198, 160, 246), false, false, true, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(145, 215, 227), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(202, 211, 245), false, false, false, false)),
        ("text.danger".to_owned(), Style::new(Color::new(36, 39, 58), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(166, 218, 149), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(237, 135, 150), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(238, 153, 160), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(245, 189, 230), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(139, 213, 202), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, false)),
        ("text.note".to_owned(), Style::new(Color::new(36, 39, 58), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, true)),
        ("text.strike".to_owned(), Style::new(Color::new(202, 211, 245), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(238, 153, 160), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(138, 173, 244), false, false, false, true)),
        ("text.title.1.markdown".to_owned(), Style::new(Color::new(237, 135, 150), false, false, false, false)),
        ("text.title.2.markdown".to_owned(), Style::new(Color::new(245, 169, 127), false, false, false, false)),
        ("text.title.3.markdown".to_owned(), Style::new(Color::new(238, 212, 159), false, false, false, false)),
        ("text.title.4.markdown".to_owned(), Style::new(Color::new(166, 218, 149), false, false, false, false)),
        ("text.title.5.markdown".to_owned(), Style::new(Color::new(125, 196, 228), false, false, false, false)),
        ("text.title.6.markdown".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, false)),
        ("text.todo".to_owned(), Style::new(Color::new(36, 39, 58), false, false, false, false)),
        ("text.todo.checked".to_owned(), Style::new(Color::new(166, 218, 149), false, false, false, false)),
        ("text.todo.unchecked".to_owned(), Style::new(Color::new(128, 135, 162), false, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(244, 219, 214), true, false, true, false)),
        ("text.warning".to_owned(), Style::new(Color::new(36, 39, 58), false, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(238, 212, 159), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(238, 212, 159), false, false, false, false)),
        ("type.builtin.c".to_owned(), Style::new(Color::new(238, 212, 159), false, false, false, false)),
        ("type.builtin.cpp".to_owned(), Style::new(Color::new(238, 212, 159), false, false, false, false)),
        ("type.css".to_owned(), Style::new(Color::new(183, 189, 248), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(238, 212, 159), false, false, false, false)),
        ("type.qualifier".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("type.tag.css".to_owned(), Style::new(Color::new(198, 160, 246), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(202, 211, 245), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(237, 135, 150), false, false, false, false)),
    ]))
}
