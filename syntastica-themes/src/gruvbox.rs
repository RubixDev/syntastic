//! The gruvbox theme collection in this module was extracted from <https://github.com/ellisonleao/gruvbox.nvim> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn dark() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(40, 40, 40)),
        ("attribute".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(211, 134, 155), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(211, 134, 155), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(146, 131, 116), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(211, 134, 155), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(131, 165, 152), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(211, 134, 155), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(184, 187, 38), false, false, false, true)),
        ("function.builtin".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("function.call".to_owned(), Style::new(Color::new(184, 187, 38), false, false, false, true)),
        ("function.macro".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("keyword.return".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(184, 187, 38), false, false, false, true)),
        ("method.call".to_owned(), Style::new(Color::new(184, 187, 38), false, false, false, true)),
        ("namespace".to_owned(), Style::new(Color::new(235, 219, 178), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(211, 134, 155), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(131, 165, 152), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(131, 165, 152), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(184, 187, 38), false, false, true, false)),
        ("string.escape".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(184, 187, 38), false, false, true, false)),
        ("string.special".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("structure".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(131, 165, 152), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(131, 165, 152), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(235, 219, 178), false, false, false, false)),
        ("text.danger".to_owned(), Style::new(Color::new(40, 40, 40), false, false, false, true)),
        ("text.danger.comment".to_owned(), Style::new(Color::new(251, 241, 199), false, false, false, true)),
        ("text.diff.add".to_owned(), Style::new(Color::new(184, 187, 38), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, false)),
        ("text.environment".to_owned(), Style::new(Color::new(142, 192, 124), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(250, 189, 47), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(184, 187, 38), false, false, true, false)),
        ("text.math".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("text.note".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
        ("text.note.comment".to_owned(), Style::new(Color::new(211, 134, 155), false, false, false, true)),
        ("text.reference".to_owned(), Style::new(Color::new(211, 134, 155), false, false, false, false)),
        ("text.title".to_owned(), Style::new(Color::new(184, 187, 38), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(40, 40, 40), false, false, true, true)),
        ("text.uri".to_owned(), Style::new(Color::new(131, 165, 152), true, false, false, false)),
        ("text.warning".to_owned(), Style::new(Color::new(251, 73, 52), false, false, false, true)),
        ("type".to_owned(), Style::new(Color::new(250, 189, 47), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(250, 189, 47), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(250, 189, 47), false, false, false, false)),
        ("type.qualifier".to_owned(), Style::new(Color::new(250, 189, 47), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(235, 219, 178), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(254, 128, 25), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(251, 241, 199)),
        ("attribute".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(143, 63, 113), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(143, 63, 113), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(146, 131, 116), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(143, 63, 113), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(7, 102, 120), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(143, 63, 113), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(121, 116, 14), false, false, false, true)),
        ("function.builtin".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("function.call".to_owned(), Style::new(Color::new(121, 116, 14), false, false, false, true)),
        ("function.macro".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("keyword.return".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(121, 116, 14), false, false, false, true)),
        ("method.call".to_owned(), Style::new(Color::new(121, 116, 14), false, false, false, true)),
        ("namespace".to_owned(), Style::new(Color::new(60, 56, 54), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(143, 63, 113), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(7, 102, 120), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(7, 102, 120), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(121, 116, 14), false, false, true, false)),
        ("string.escape".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(121, 116, 14), false, false, true, false)),
        ("string.special".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("structure".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(7, 102, 120), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(7, 102, 120), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(60, 56, 54), false, false, false, false)),
        ("text.danger".to_owned(), Style::new(Color::new(251, 241, 199), false, false, false, true)),
        ("text.danger.comment".to_owned(), Style::new(Color::new(40, 40, 40), false, false, false, true)),
        ("text.diff.add".to_owned(), Style::new(Color::new(121, 116, 14), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, false)),
        ("text.environment".to_owned(), Style::new(Color::new(66, 123, 88), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(181, 118, 20), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(121, 116, 14), false, false, true, false)),
        ("text.math".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("text.note".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
        ("text.note.comment".to_owned(), Style::new(Color::new(143, 63, 113), false, false, false, true)),
        ("text.reference".to_owned(), Style::new(Color::new(143, 63, 113), false, false, false, false)),
        ("text.title".to_owned(), Style::new(Color::new(121, 116, 14), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(251, 241, 199), false, false, true, true)),
        ("text.uri".to_owned(), Style::new(Color::new(7, 102, 120), true, false, false, false)),
        ("text.warning".to_owned(), Style::new(Color::new(157, 0, 6), false, false, false, true)),
        ("type".to_owned(), Style::new(Color::new(181, 118, 20), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(181, 118, 20), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(181, 118, 20), false, false, false, false)),
        ("type.qualifier".to_owned(), Style::new(Color::new(181, 118, 20), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(60, 56, 54), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(175, 58, 3), false, false, false, false)),
    ]))
}
