//! The 'github' theme collection in this module was extracted from <https://github.com/projekt0n/github-nvim-theme> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn dark() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(230, 237, 243), Some(Color::new(48, 54, 61)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(139, 148, 158), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(255, 166, 87), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(126, 231, 135), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(255, 166, 87), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(248, 81, 73), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(126, 231, 135), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(126, 231, 135), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(126, 231, 135), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(255, 166, 87), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(255, 166, 87), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(255, 166, 87), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(126, 231, 135), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(48, 54, 61), Some(Color::new(248, 81, 73)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(63, 185, 80), Some(Color::new(46, 66, 60)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(248, 81, 73), Some(Color::new(74, 54, 60)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(230, 237, 243), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(230, 237, 243), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(48, 54, 61), Some(Color::new(47, 129, 247)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(126, 231, 135), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(230, 237, 243), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(230, 237, 243), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(48, 54, 61), Some(Color::new(125, 133, 144)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(63, 185, 80), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(110, 118, 129), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(121, 192, 255), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(48, 54, 61), Some(Color::new(210, 153, 34)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(255, 166, 87), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(126, 231, 135), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(255, 166, 87), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(230, 237, 243), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn dark_colorblind() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(201, 209, 217), Some(Color::new(13, 17, 23)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(139, 148, 158), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(253, 172, 84), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(253, 172, 84), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(212, 118, 22), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(253, 172, 84), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(253, 172, 84), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(253, 172, 84), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(13, 17, 23), Some(Color::new(212, 118, 22)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(88, 166, 255), Some(Color::new(16, 31, 55)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(212, 118, 22), Some(Color::new(39, 29, 20)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(201, 209, 217), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(201, 209, 217), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(13, 17, 23), Some(Color::new(88, 166, 255)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(201, 209, 217), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(201, 209, 217), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(13, 17, 23), Some(Color::new(139, 148, 158)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(88, 166, 255), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(110, 118, 129), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(121, 192, 255), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(13, 17, 23), Some(Color::new(210, 153, 34)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(253, 172, 84), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(253, 172, 84), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(236, 142, 44), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(31, 35, 40), Some(Color::new(255, 255, 255)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(110, 119, 129), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(149, 56, 0), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(17, 99, 41), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(149, 56, 0), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(209, 36, 47), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(17, 99, 41), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(17, 99, 41), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(17, 99, 41), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(149, 56, 0), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(149, 56, 0), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(149, 56, 0), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(17, 99, 41), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(209, 36, 47)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(26, 127, 55), Some(Color::new(184, 208, 191)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(209, 36, 47), Some(Color::new(228, 183, 190)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(31, 35, 40), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(31, 35, 40), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(9, 105, 218)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(17, 99, 41), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(31, 35, 40), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(31, 35, 40), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(208, 215, 222)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(17, 99, 41), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(87, 96, 106), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(5, 80, 174), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(154, 103, 0)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(149, 56, 0), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(17, 99, 41), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(149, 56, 0), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(31, 35, 40), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn dimmed() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(173, 186, 199), Some(Color::new(34, 39, 46)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(150, 208, 255), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(118, 131, 144), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(229, 83, 75), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(150, 208, 255), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(150, 208, 255), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(150, 208, 255), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(34, 39, 46), Some(Color::new(229, 83, 75)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(87, 171, 90), Some(Color::new(37, 52, 48)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(229, 83, 75), Some(Color::new(59, 42, 47)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(173, 186, 199), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(173, 186, 199), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(34, 39, 46), Some(Color::new(83, 155, 245)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(173, 186, 199), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(173, 186, 199), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(34, 39, 46), Some(Color::new(118, 131, 144)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(87, 171, 90), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(99, 110, 123), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(108, 182, 255), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(34, 39, 46), Some(Color::new(198, 144, 38)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn dark_dimmed() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(173, 186, 199), Some(Color::new(34, 39, 46)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(150, 208, 255), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(118, 131, 144), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(229, 83, 75), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(150, 208, 255), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(150, 208, 255), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(150, 208, 255), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(34, 39, 46), Some(Color::new(229, 83, 75)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(87, 171, 90), Some(Color::new(37, 52, 48)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(229, 83, 75), Some(Color::new(59, 42, 47)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(173, 186, 199), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(173, 186, 199), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(220, 189, 251), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(34, 39, 46), Some(Color::new(83, 155, 245)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(173, 186, 199), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(173, 186, 199), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(34, 39, 46), Some(Color::new(118, 131, 144)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(87, 171, 90), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(99, 110, 123), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(108, 182, 255), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(34, 39, 46), Some(Color::new(198, 144, 38)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(141, 219, 140), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(246, 157, 80), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(244, 112, 103), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(173, 186, 199), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(108, 182, 255), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn dark_default() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(240, 243, 246), Some(Color::new(10, 12, 16)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(173, 220, 255), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(189, 196, 204), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(255, 106, 105), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(173, 220, 255), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(173, 220, 255), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(173, 220, 255), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(10, 12, 16), Some(Color::new(255, 106, 105)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(9, 180, 58), Some(Color::new(10, 37, 22)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(255, 106, 105), Some(Color::new(47, 26, 29)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(240, 243, 246), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(240, 243, 246), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(10, 12, 16), Some(Color::new(64, 158, 255)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(240, 243, 246), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(240, 243, 246), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(10, 12, 16), Some(Color::new(217, 222, 227)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(38, 205, 77), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(158, 167, 179), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(145, 203, 255), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(10, 12, 16), Some(Color::new(224, 155, 19)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light_default() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(1, 4, 9), Some(Color::new(255, 255, 255)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(3, 37, 99), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(102, 112, 123), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(209, 36, 47), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(3, 37, 99), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(3, 37, 99), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(3, 37, 99), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(209, 36, 47)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(5, 93, 32), Some(Color::new(218, 247, 224)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(209, 36, 47), Some(Color::new(255, 236, 235)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(1, 4, 9), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(1, 4, 9), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(3, 73, 180)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(1, 4, 9), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(1, 4, 9), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(14, 17, 22)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(75, 83, 93), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(2, 59, 149), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(116, 69, 0)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn dark_tritanopia() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(201, 209, 217), Some(Color::new(13, 17, 23)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(139, 148, 158), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(255, 161, 152), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(255, 161, 152), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(248, 81, 73), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(255, 161, 152), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(255, 161, 152), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(255, 161, 152), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(13, 17, 23), Some(Color::new(248, 81, 73)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(88, 166, 255), Some(Color::new(16, 31, 55)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(248, 81, 73), Some(Color::new(44, 23, 27)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(201, 209, 217), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(201, 209, 217), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(210, 168, 255), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(13, 17, 23), Some(Color::new(88, 166, 255)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(201, 209, 217), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(201, 209, 217), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(13, 17, 23), Some(Color::new(139, 148, 158)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(88, 166, 255), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(110, 118, 129), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(121, 192, 255), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(13, 17, 23), Some(Color::new(210, 153, 34)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(255, 161, 152), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(165, 214, 255), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(255, 161, 152), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(255, 123, 114), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(201, 209, 217), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(121, 192, 255), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light_colorblind() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(27, 31, 36), Some(Color::new(255, 255, 255)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(110, 119, 129), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(138, 70, 0), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(138, 70, 0), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(209, 36, 47), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(138, 70, 0), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(138, 70, 0), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(138, 70, 0), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(209, 36, 47)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(9, 105, 218), Some(Color::new(180, 203, 231)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(209, 36, 47), Some(Color::new(220, 200, 179)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(27, 31, 36), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(27, 31, 36), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(9, 105, 218)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(27, 31, 36), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(27, 31, 36), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(208, 215, 222)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(87, 96, 106), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(5, 80, 174), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(154, 103, 0)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(138, 70, 0), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(138, 70, 0), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(179, 89, 0), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light_tritanopia() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(27, 31, 36), Some(Color::new(255, 255, 255)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(110, 119, 129), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(164, 14, 38), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(164, 14, 38), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(209, 36, 47), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(164, 14, 38), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(164, 14, 38), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(164, 14, 38), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(10, 48, 105), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(209, 36, 47)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(9, 105, 218), Some(Color::new(233, 247, 255)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(209, 36, 47), Some(Color::new(255, 240, 239)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(27, 31, 36), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(27, 31, 36), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(102, 57, 186), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(9, 105, 218)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(27, 31, 36), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(27, 31, 36), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(208, 215, 222)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(87, 96, 106), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(5, 80, 174), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(154, 103, 0)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(164, 14, 38), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(164, 14, 38), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(207, 34, 46), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(27, 31, 36), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(5, 80, 174), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn dark_high_contrast() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(240, 243, 246), Some(Color::new(10, 12, 16)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(173, 220, 255), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(189, 196, 204), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(255, 106, 105), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(173, 220, 255), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(173, 220, 255), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(173, 220, 255), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(10, 12, 16), Some(Color::new(255, 106, 105)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(9, 180, 58), Some(Color::new(10, 37, 22)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(255, 106, 105), Some(Color::new(47, 26, 29)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(240, 243, 246), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(240, 243, 246), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(219, 183, 255), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(10, 12, 16), Some(Color::new(64, 158, 255)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(240, 243, 246), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(240, 243, 246), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(10, 12, 16), Some(Color::new(217, 222, 227)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(38, 205, 77), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(158, 167, 179), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(145, 203, 255), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(10, 12, 16), Some(Color::new(224, 155, 19)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(114, 240, 136), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(255, 183, 87), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(255, 148, 146), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(240, 243, 246), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(145, 203, 255), None, false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light_high_contrast() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(1, 4, 9), Some(Color::new(255, 255, 255)), false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(3, 37, 99), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(102, 112, 123), None, false, false, false, false)),
        ("conditional".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("constant.builtin.rust".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("constant.html".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(209, 36, 47), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("field.lua".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("field.luadoc".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("field.python".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("field.sql".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("function.builtin.bash".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("function.builtin.make".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("function.call.bash".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("function.call.lua".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("label.json".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("label.lua".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("label.ruby".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("label.vimdoc".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("method.call.lua".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("namespace.builtin.lua".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("namespace.c_sharp".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("operator.bash".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("operator.lua".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("operator.luadoc".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("parameter.vimdoc".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("preproc.rust".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("property.scss".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("punctuation.delimiter.bash".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("punctuation.delimiter.markdown".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("punctuation.delimiter.markdown_inline".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("punctuation.special.luadoc".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(3, 37, 99), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(3, 37, 99), None, false, false, false, true)),
        ("string.regex".into(), Style::new(Color::new(3, 37, 99), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("symbol.make".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("symbol.ruby".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("text".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(209, 36, 47)), false, false, false, false)),
        ("text.diff.add".into(), Style::new(Color::new(5, 93, 32), Some(Color::new(218, 247, 224)), false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(209, 36, 47), Some(Color::new(255, 236, 235)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(1, 4, 9), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(1, 4, 9), None, false, false, true, false)),
        ("text.math".into(), Style::new(Color::new(81, 37, 152), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(3, 73, 180)), false, false, false, false)),
        ("text.quote.markdown".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(1, 4, 9), None, true, false, false, false)),
        ("text.strike".into(), Style::new(Color::new(1, 4, 9), None, false, true, false, false)),
        ("text.strong".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, true)),
        ("text.title".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, true)),
        ("text.title.html".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(14, 17, 22)), false, false, false, false)),
        ("text.todo.checked".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("text.todo.unchecked".into(), Style::new(Color::new(75, 83, 93), None, false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(2, 59, 149), None, true, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(255, 255, 255), Some(Color::new(116, 69, 0)), false, false, false, false)),
        ("type".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("type.builtin.python".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("type.css".into(), Style::new(Color::new(2, 76, 26), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(112, 44, 0), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(160, 17, 31), None, false, false, false, false)),
        ("type.sql".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("variable.builtin.python".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(1, 4, 9), None, false, false, false, false)),
        ("variable.sql".into(), Style::new(Color::new(2, 59, 149), None, false, false, false, false)),
    ]))
}
