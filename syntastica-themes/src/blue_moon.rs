//! The 'blue_moon' theme collection in this module was extracted from <https://github.com/kyazdani42/blue-moon> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn blue_moon() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(251, 251, 251), Some(Color::new(27, 30, 43)), false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(180, 180, 180), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(180, 196, 180), None, false, false, false, true)),
        ("comment".into(), Style::new(Color::new(103, 110, 150), None, false, false, true, false)),
        ("conditional".into(), Style::new(Color::new(149, 157, 203), None, false, false, true, false)),
        ("constant".into(), Style::new(Color::new(207, 207, 191), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(180, 180, 180), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(207, 207, 191), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(207, 207, 191), None, false, false, false, false)),
        ("debug".into(), Style::new(Color::new(137, 187, 221), None, false, false, true, false)),
        ("define".into(), Style::new(Color::new(185, 163, 235), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(149, 157, 203), None, false, false, true, false)),
        ("field".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(180, 180, 180), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(185, 163, 235), None, false, false, false, false)),
        ("function.call".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(180, 180, 180), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(137, 187, 221), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(149, 157, 203), None, false, false, false, false)),
        ("keyword.function".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("keyword.return".into(), Style::new(Color::new(149, 157, 203), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(137, 187, 221), None, false, false, true, false)),
        ("macro".into(), Style::new(Color::new(185, 163, 235), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("method.call".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(207, 207, 191), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(180, 180, 180), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(255, 255, 255), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(207, 207, 191), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("punctuation.bracket".into(), Style::new(Color::new(137, 187, 221), None, false, false, false, false)),
        ("punctuation.delimiter".into(), Style::new(Color::new(255, 255, 255), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(149, 157, 203), None, false, false, true, false)),
        ("storageclass".into(), Style::new(Color::new(207, 207, 191), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(180, 196, 180), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(137, 187, 221), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(137, 187, 221), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(194, 176, 176), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(184, 188, 243), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(103, 110, 150), None, false, false, true, false)),
        ("text.reference".into(), Style::new(Color::new(137, 221, 255), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(185, 163, 235), None, false, false, false, true)),
        ("text.uri".into(), Style::new(Color::new(180, 196, 180), None, true, false, false, false)),
        ("text.warning".into(), Style::new(Color::new(185, 163, 235), None, false, false, false, true)),
        ("type".into(), Style::new(Color::new(207, 207, 191), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(180, 180, 180), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(149, 157, 203), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(207, 207, 191), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(180, 180, 180), None, false, false, false, false)),
    ]))
}
