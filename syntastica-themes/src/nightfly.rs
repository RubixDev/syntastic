//! The 'nightfly' theme collection in this module was extracted from <https://github.com/bluz71/vim-nightfly-colors> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn nightfly() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("_normal".into(), Style::new(Color::new(195, 204, 220), Some(Color::new(1, 22, 39)), false, false, false, false)),
        ("annotation".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("attribute".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("boolean".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("character".into(), Style::new(Color::new(174, 129, 255), None, false, false, false, false)),
        ("character.special".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("comment".into(), Style::new(Color::new(124, 143, 143), None, false, false, true, false)),
        ("conditional".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("constant".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("constant.builtin".into(), Style::new(Color::new(161, 205, 94), None, false, false, false, false)),
        ("constant.macro".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("constructor".into(), Style::new(Color::new(33, 199, 168), None, false, false, false, false)),
        ("danger".into(), Style::new(Color::new(227, 209, 138), Some(Color::new(14, 41, 63)), false, false, false, false)),
        ("debug".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("define".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("error".into(), Style::new(Color::new(252, 81, 78), None, false, false, false, false)),
        ("exception".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("field".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("field.yaml".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("float".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("function".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.builtin".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.call".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("function.macro".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("include".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("keyword".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("keyword.gitcommit".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("keyword.operator".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("label".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("macro".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("method".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("namespace".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("number".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("operator".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("parameter".into(), Style::new(Color::new(227, 154, 166), None, false, false, false, false)),
        ("parameter.bash".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("preproc".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("property".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("punctuation".into(), Style::new(Color::new(195, 204, 220), None, false, false, false, false)),
        ("punctuation.delimiter.astro".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("punctuation.delimiter.css".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("punctuation.delimiter.rust".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("punctuation.delimiter.scss".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("punctuation.delimiter.yaml".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("punctuation.special".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("repeat".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("storageclass".into(), Style::new(Color::new(247, 140, 108), None, false, false, false, false)),
        ("storageclass.rust".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("string".into(), Style::new(Color::new(236, 196, 141), None, false, false, false, false)),
        ("string.escape".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("string.regex".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("string.special".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("symbol".into(), Style::new(Color::new(174, 129, 255), None, false, false, false, false)),
        ("tag".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("tag.attribute".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("tag.delimiter".into(), Style::new(Color::new(161, 205, 94), None, false, false, false, false)),
        ("text.danger".into(), Style::new(Color::new(252, 81, 78), None, false, false, false, false)),
        ("text.diff.delete".into(), Style::new(Color::new(75, 100, 121), Some(Color::new(44, 48, 67)), false, false, false, false)),
        ("text.emphasis".into(), Style::new(Color::new(227, 154, 166), None, false, false, true, false)),
        ("text.environment".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("text.environment.name".into(), Style::new(Color::new(33, 199, 168), None, false, false, false, false)),
        ("text.literal".into(), Style::new(Color::new(236, 196, 141), None, false, false, false, false)),
        ("text.math".into(), Style::new(Color::new(255, 88, 116), None, false, false, false, false)),
        ("text.note".into(), Style::new(Color::new(124, 143, 143), None, false, false, false, false)),
        ("text.reference".into(), Style::new(Color::new(161, 205, 94), None, false, false, false, false)),
        ("text.reference.gitcommit".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("text.strong".into(), Style::new(Color::new(227, 154, 166), None, false, false, false, false)),
        ("text.title".into(), Style::new(Color::new(130, 170, 255), None, false, false, false, false)),
        ("text.title.astro".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("text.title.gitcommit".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("text.title.help".into(), Style::new(Color::new(135, 188, 255), None, false, false, false, false)),
        ("text.title.html".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("text.title.svelte".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("text.title.vue".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("text.todo".into(), Style::new(Color::new(227, 209, 138), Some(Color::new(14, 41, 63)), false, false, false, false)),
        ("text.uri".into(), Style::new(Color::new(174, 129, 255), None, false, false, false, false)),
        ("text.uri.astro".into(), Style::new(Color::new(199, 146, 234), None, false, false, true, false)),
        ("text.uri.gitcommit".into(), Style::new(Color::new(33, 199, 168), None, false, false, false, false)),
        ("text.uri.html".into(), Style::new(Color::new(199, 146, 234), None, false, false, true, false)),
        ("text.uri.svelte".into(), Style::new(Color::new(199, 146, 234), None, false, false, true, false)),
        ("text.uri.vue".into(), Style::new(Color::new(199, 146, 234), None, false, false, true, false)),
        ("text.warning".into(), Style::new(Color::new(227, 209, 138), None, false, false, false, false)),
        ("type".into(), Style::new(Color::new(33, 199, 168), None, false, false, false, false)),
        ("type.builtin".into(), Style::new(Color::new(33, 199, 168), None, false, false, false, false)),
        ("type.definition".into(), Style::new(Color::new(33, 199, 168), None, false, false, false, false)),
        ("type.qualifier".into(), Style::new(Color::new(199, 146, 234), None, false, false, false, false)),
        ("variable".into(), Style::new(Color::new(195, 204, 220), None, false, false, false, false)),
        ("variable.builtin".into(), Style::new(Color::new(161, 205, 94), None, false, false, false, false)),
        ("variable.builtin.vim".into(), Style::new(Color::new(33, 199, 168), None, false, false, false, false)),
        ("variable.scss".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
        ("variable.vim".into(), Style::new(Color::new(127, 219, 202), None, false, false, false, false)),
    ]))
}
