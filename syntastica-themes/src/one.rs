//! The one theme collection in this module was extracted from <https://github.com/navarasu/onedark.nvim> using `auto_extract.py`.

use std::collections::BTreeMap;

use syntastica_core::{
    style::{Color, Style},
    theme::ResolvedTheme,
};

#[rustfmt::skip]
pub fn cool() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(36, 43, 56)),
        ("annotation".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("attribute".to_owned(), Style::new(Color::new(77, 189, 203), false, false, false, false)),
        ("attribute.typescript".to_owned(), Style::new(Color::new(90, 176, 246), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(84, 97, 120), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(235, 194, 117), false, false, false, true)),
        ("danger".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(235, 194, 117), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(77, 189, 203), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(90, 176, 246), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(77, 189, 203), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(77, 189, 203), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(90, 176, 246), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(235, 194, 117), false, false, false, false)),
        ("none".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("note".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("parameter.reference".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(77, 189, 203), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(125, 137, 159), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(125, 137, 159), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(125, 137, 159), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(235, 194, 117), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(151, 202, 114), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(77, 189, 203), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(235, 194, 117), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(151, 202, 114), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(165, 176, 197), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(151, 202, 114), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(90, 176, 246), false, false, false, false)),
        ("text.strike".to_owned(), Style::new(Color::new(165, 176, 197), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(239, 95, 107), false, false, true, false)),
        ("text.underline".to_owned(), Style::new(Color::new(165, 176, 197), true, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(77, 189, 203), true, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(235, 194, 117), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(217, 154, 94), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(202, 114, 228), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(239, 95, 107), false, false, false, false)),
        ("warning".to_owned(), Style::new(Color::new(165, 176, 197), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn dark() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(40, 44, 52)),
        ("annotation".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("attribute".to_owned(), Style::new(Color::new(86, 182, 194), false, false, false, false)),
        ("attribute.typescript".to_owned(), Style::new(Color::new(97, 175, 239), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(92, 99, 112), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(229, 192, 123), false, false, false, true)),
        ("danger".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(229, 192, 123), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(86, 182, 194), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(97, 175, 239), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(86, 182, 194), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(86, 182, 194), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(97, 175, 239), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(229, 192, 123), false, false, false, false)),
        ("none".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("note".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("parameter.reference".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(86, 182, 194), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(132, 139, 152), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(132, 139, 152), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(132, 139, 152), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(229, 192, 123), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(152, 195, 121), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(86, 182, 194), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(229, 192, 123), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(152, 195, 121), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(171, 178, 191), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(152, 195, 121), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(97, 175, 239), false, false, false, false)),
        ("text.strike".to_owned(), Style::new(Color::new(171, 178, 191), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(232, 102, 113), false, false, true, false)),
        ("text.underline".to_owned(), Style::new(Color::new(171, 178, 191), true, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(86, 182, 194), true, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(229, 192, 123), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(209, 154, 102), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(198, 120, 221), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(232, 102, 113), false, false, false, false)),
        ("warning".to_owned(), Style::new(Color::new(171, 178, 191), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn darker() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(31, 35, 41)),
        ("annotation".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("attribute".to_owned(), Style::new(Color::new(72, 176, 189), false, false, false, false)),
        ("attribute.typescript".to_owned(), Style::new(Color::new(79, 166, 237), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(83, 89, 101), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(226, 184, 107), false, false, false, true)),
        ("danger".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(226, 184, 107), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(72, 176, 189), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(79, 166, 237), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(72, 176, 189), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(72, 176, 189), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(79, 166, 237), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(226, 184, 107), false, false, false, false)),
        ("none".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("note".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("parameter.reference".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(72, 176, 189), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(122, 129, 142), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(122, 129, 142), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(122, 129, 142), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(226, 184, 107), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(142, 189, 107), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(72, 176, 189), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(226, 184, 107), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(142, 189, 107), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(160, 168, 183), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(142, 189, 107), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(79, 166, 237), false, false, false, false)),
        ("text.strike".to_owned(), Style::new(Color::new(160, 168, 183), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(229, 85, 97), false, false, true, false)),
        ("text.underline".to_owned(), Style::new(Color::new(160, 168, 183), true, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(72, 176, 189), true, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(226, 184, 107), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(204, 144, 87), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(191, 104, 217), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(229, 85, 97), false, false, false, false)),
        ("warning".to_owned(), Style::new(Color::new(160, 168, 183), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn deep() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(26, 33, 46)),
        ("annotation".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("attribute".to_owned(), Style::new(Color::new(52, 191, 208), false, false, false, false)),
        ("attribute.typescript".to_owned(), Style::new(Color::new(65, 167, 252), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(69, 85, 116), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(239, 189, 93), false, false, false, true)),
        ("danger".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(239, 189, 93), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(52, 191, 208), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(65, 167, 252), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(52, 191, 208), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(52, 191, 208), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(65, 167, 252), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(239, 189, 93), false, false, false, false)),
        ("none".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("note".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("parameter.reference".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(52, 191, 208), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(108, 125, 156), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(108, 125, 156), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(108, 125, 156), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(239, 189, 93), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(139, 205, 91), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(52, 191, 208), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(239, 189, 93), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(139, 205, 91), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(147, 164, 195), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(139, 205, 91), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(65, 167, 252), false, false, false, false)),
        ("text.strike".to_owned(), Style::new(Color::new(147, 164, 195), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(246, 88, 102), false, false, true, false)),
        ("text.underline".to_owned(), Style::new(Color::new(147, 164, 195), true, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(52, 191, 208), true, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(239, 189, 93), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(221, 144, 70), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(199, 90, 232), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(246, 88, 102), false, false, false, false)),
        ("warning".to_owned(), Style::new(Color::new(147, 164, 195), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn light() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(250, 250, 250)),
        ("annotation".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("attribute".to_owned(), Style::new(Color::new(1, 132, 188), false, false, false, false)),
        ("attribute.typescript".to_owned(), Style::new(Color::new(64, 120, 242), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(160, 161, 167), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(152, 104, 1), false, false, false, true)),
        ("danger".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(152, 104, 1), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(1, 132, 188), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(64, 120, 242), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(1, 132, 188), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(1, 132, 188), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(64, 120, 242), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(152, 104, 1), false, false, false, false)),
        ("none".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("note".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("parameter.reference".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(1, 132, 188), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(129, 131, 135), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(129, 131, 135), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(129, 131, 135), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(152, 104, 1), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(80, 161, 79), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(1, 132, 188), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(152, 104, 1), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(80, 161, 79), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(56, 58, 66), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(80, 161, 79), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(64, 120, 242), false, false, false, false)),
        ("text.strike".to_owned(), Style::new(Color::new(56, 58, 66), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(228, 86, 73), false, false, true, false)),
        ("text.underline".to_owned(), Style::new(Color::new(56, 58, 66), true, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(1, 132, 188), true, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(152, 104, 1), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(193, 132, 1), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(166, 38, 164), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(228, 86, 73), false, false, false, false)),
        ("warning".to_owned(), Style::new(Color::new(56, 58, 66), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn warm() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(44, 45, 48)),
        ("annotation".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("attribute".to_owned(), Style::new(Color::new(95, 175, 185), false, false, false, false)),
        ("attribute.typescript".to_owned(), Style::new(Color::new(104, 174, 232), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(100, 101, 104), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(223, 190, 129), false, false, false, true)),
        ("danger".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(223, 190, 129), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(95, 175, 185), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(104, 174, 232), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(95, 175, 185), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(95, 175, 185), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(104, 174, 232), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(223, 190, 129), false, false, false, false)),
        ("none".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("note".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("parameter.reference".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(95, 175, 185), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(139, 141, 145), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(139, 141, 145), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(139, 141, 145), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(223, 190, 129), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(153, 188, 128), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(95, 175, 185), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(223, 190, 129), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(153, 188, 128), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(177, 180, 185), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(153, 188, 128), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(104, 174, 232), false, false, false, false)),
        ("text.strike".to_owned(), Style::new(Color::new(177, 180, 185), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(225, 109, 119), false, false, true, false)),
        ("text.underline".to_owned(), Style::new(Color::new(177, 180, 185), true, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(95, 175, 185), true, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(223, 190, 129), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(201, 154, 110), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(194, 127, 215), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(225, 109, 119), false, false, false, false)),
        ("warning".to_owned(), Style::new(Color::new(177, 180, 185), false, false, false, false)),
    ]))
}

#[rustfmt::skip]
pub fn warmer() -> ResolvedTheme {
    ResolvedTheme::new(BTreeMap::from([
        ("bg0".to_owned(), Style::color_only(35, 35, 38)),
        ("annotation".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("attribute".to_owned(), Style::new(Color::new(81, 168, 179), false, false, false, false)),
        ("attribute.typescript".to_owned(), Style::new(Color::new(87, 165, 229), false, false, false, false)),
        ("boolean".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("character".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("character.special".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("comment".to_owned(), Style::new(Color::new(90, 91, 94), false, false, true, false)),
        ("conditional".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("constant".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("constant.builtin".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("constant.macro".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("constructor".to_owned(), Style::new(Color::new(219, 182, 113), false, false, false, true)),
        ("danger".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("debug".to_owned(), Style::new(Color::new(219, 182, 113), false, false, false, false)),
        ("define".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("error".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("exception".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("field".to_owned(), Style::new(Color::new(81, 168, 179), false, false, false, false)),
        ("float".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("function".to_owned(), Style::new(Color::new(87, 165, 229), false, false, false, false)),
        ("function.builtin".to_owned(), Style::new(Color::new(81, 168, 179), false, false, false, false)),
        ("function.macro".to_owned(), Style::new(Color::new(81, 168, 179), false, false, false, false)),
        ("include".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("keyword".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("keyword.function".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("keyword.operator".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("label".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("macro".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("method".to_owned(), Style::new(Color::new(87, 165, 229), false, false, false, false)),
        ("namespace".to_owned(), Style::new(Color::new(219, 182, 113), false, false, false, false)),
        ("none".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("note".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("number".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("operator".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("parameter".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("parameter.reference".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("preproc".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("property".to_owned(), Style::new(Color::new(81, 168, 179), false, false, false, false)),
        ("punctuation".to_owned(), Style::new(Color::new(129, 131, 135), false, false, false, false)),
        ("punctuation.bracket".to_owned(), Style::new(Color::new(129, 131, 135), false, false, false, false)),
        ("punctuation.delimiter".to_owned(), Style::new(Color::new(129, 131, 135), false, false, false, false)),
        ("punctuation.special".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("repeat".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("storageclass".to_owned(), Style::new(Color::new(219, 182, 113), false, false, false, false)),
        ("string".to_owned(), Style::new(Color::new(143, 181, 115), false, false, false, false)),
        ("string.escape".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("string.regex".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("string.special".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("symbol".to_owned(), Style::new(Color::new(81, 168, 179), false, false, false, false)),
        ("tag".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("tag.attribute".to_owned(), Style::new(Color::new(219, 182, 113), false, false, false, false)),
        ("tag.delimiter".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("text".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("text.diff.add".to_owned(), Style::new(Color::new(143, 181, 115), false, false, false, false)),
        ("text.diff.delete".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("text.emphasis".to_owned(), Style::new(Color::new(167, 170, 176), false, false, true, false)),
        ("text.environment".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("text.environment.name".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("text.literal".to_owned(), Style::new(Color::new(143, 181, 115), false, false, false, false)),
        ("text.math".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("text.reference".to_owned(), Style::new(Color::new(87, 165, 229), false, false, false, false)),
        ("text.strike".to_owned(), Style::new(Color::new(167, 170, 176), false, true, false, false)),
        ("text.strong".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, true)),
        ("text.title".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, true)),
        ("text.todo".to_owned(), Style::new(Color::new(222, 93, 104), false, false, true, false)),
        ("text.underline".to_owned(), Style::new(Color::new(167, 170, 176), true, false, false, false)),
        ("text.uri".to_owned(), Style::new(Color::new(81, 168, 179), true, false, false, false)),
        ("type".to_owned(), Style::new(Color::new(219, 182, 113), false, false, false, false)),
        ("type.builtin".to_owned(), Style::new(Color::new(196, 144, 96), false, false, false, false)),
        ("type.definition".to_owned(), Style::new(Color::new(187, 112, 210), false, false, false, false)),
        ("variable".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
        ("variable.builtin".to_owned(), Style::new(Color::new(222, 93, 104), false, false, false, false)),
        ("warning".to_owned(), Style::new(Color::new(167, 170, 176), false, false, false, false)),
    ]))
}
